<?php

namespace App\Models;

use App\Helpers\Helper;
use App\Mail\ConciergeAutoGenerated;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Mail;

class ClientSettings extends Model
{
    protected $guarded = [];
    protected $table = 'tbl_client_settings';
    public $timestamps = false;

    public static function getclientSettings($client_id, $attributes = [])
    {
        $settings = [];
        if (!empty($attributes)) {
            $settings = self::where('client_id', $client_id)->select($attributes)->first();
        }

        return $settings;
    }

    public function saveSettings($client_id, $input)
    {
        $settings = self::where('client_id', $client_id)->first();
        if (empty($settings)) {
            $settings = new ClientSettings();
            $settings->client_id = $client_id;
        }
        $settings->fill($input);
        $settings->save();

        return $settings;
    }

    public static function isPostSubmissionEnabled($client_id)
    {
        $settings = new \App\Models\ClientSettings();
        $clientSettings = $settings->getclientSettings($client_id, ['post_submission_documents_enabled']);

        return $clientSettings->post_submission_documents_enabled ?? 0;
    }

    public static function updateCaseFiledStatus($request)
    {
        $client_id = $request->input('client_id', '');
        $caseNo = $request->input('caseNo', '');
        $caseInfo = $request->input('caseInfo', '');
        $hearingDate = $request->input('hearingDate', '');
        $hearingTime = $request->input('hearingTime', '');
        $zoomLink = $request->input('zoomLink', '');

        $settings = self::where('client_id', $client_id)->first();
        $dateTime = date("Y-m-d H:i:s");
        if (empty($settings)) {
            $settingsObj = new ClientSettings();
            $settingsObj->created_at = $dateTime;
        } else {
            $settingsObj = $settings;
        }
        $settingsObj->client_id = $client_id;
        $settingsObj->case_no = $caseNo;
        $settingsObj->hearing_date = $hearingDate;
        $settingsObj->hearing_time = $hearingTime;
        $settingsObj->zoom_link = $zoomLink;
        $settingsObj->is_case_filed = 1;
        $settingsObj->case_filed_info = $caseInfo;
        $settingsObj->case_filed_timestamp = $dateTime;
        $settingsObj->updated_at = $dateTime;
        $settingsObj->save();
    }

    public static function updateCaseFiledNotAvailableStatus($request)
    {
        $client_id = $request->input('client_id', '');
        $settings = self::where('client_id', $client_id)->first();
        $dateTime = date("Y-m-d H:i:s");
        $settingsObj = new ClientSettings();
        if (empty($settings)) {
            $settingsObj->client_id = $client_id;
            $settingsObj->created_at = $dateTime;
        }
        $settingsObj->is_case_filed = 1;
        $settingsObj->case_filed_timestamp = $dateTime;
        $settingsObj->updated_at = $dateTime;
        $settingsObj->save();
    }

    public static function sendStatusMailAndText($request)
    {
        $client_id = $request->input('client_id', '');
        $caseNo = $request->input('caseNo', '');
        $caseInfo = $request->input('caseInfo', '');
        $hearingDate = $request->input('hearingDate', '');
        $hearingTime = $request->input('hearingTime', '');
        $zoomLink = $request->input('zoomLink', '');

        $client = User::where(['role' => User::CLIENT, 'id' => $client_id])->select('name', 'email', 'phone_no')->first();
        $clientEmail = Helper::validate_key_value('email', $client);

        $messageBody = "Hello {$client->name},<br><br>";
        $messageBody .= "Your 341a Court hearing is: {$hearingDate} & {$hearingTime}.<br>";
        $messageBody .= "The Zoom link information is:<br><a href='{$zoomLink}' style=' text-decoration:underline; color: #0000EE;'>{$zoomLink}</a>";
        $messageBody .= "<br><br>";
        $messageBody .= "{$caseInfo}";

        // Send email to client
        Mail::to($clientEmail)->send(new ConciergeAutoGenerated('Hearing Information - ['.$caseNo.']', $messageBody, [], true));
    }

    protected static function getClientAttorneyId($client_id)
    {
        $attorney = \App\Models\ClientsAttorney::where("client_id", $client_id)->first();

        return $attorney->attorney_id ?? null;
    }

    public static function getCaseFiledPopupReturnHTML($request, $route, $isPreview = false, $notAvailableRoute = '')
    {

        $client_id = $request->input('client_id', '');
        $client = User::where('id', $client_id)->select('name')->first();
        $client_name = $client ? $client->name : '';
        $status = $request->input('status', '');
        $caseNo = '';
        $info = '';
        $hearing_date = '';
        $hearing_time = '';
        $zoom_link = '';
        $tab = $status;
        if ($isPreview) {
            $settings = self::getclientSettings($client_id, ['case_no', 'case_filed_info', 'is_case_filed','hearing_date','hearing_time','zoom_link']);
            if (isset($settings) && !empty($settings)) {
                $caseNo = $settings->case_no ?? '';
                $info = $settings->case_filed_info ?? '';
                $status = $settings->is_case_filed ?? '';
                $hearing_date = $settings->hearing_date ?? '';
                $hearing_time = $settings->hearing_time ?? '';
                $zoom_link = $settings->zoom_link ?? '';
            }
        }

        $start = new \DateTime('12:00 AM');
        $end = new \DateTime('11:55 PM');
        $interval = new \DateInterval('PT5M'); // 5 minutes
        $times = [];

        while ($start <= $end) {
            $times[] = $start->format('h:i A');
            $start->add($interval);
        }
        $data = [
            'client_id' => $client_id,
            'client_name' => $client_name,
            'status' => $status,
            'label' => 'Send 341a Hearing Email Notification:',
            'route' => route($route),
            'isPreview' => $isPreview,
            'caseNo' => $caseNo,
            'info' => $info,
            'times' => $times,
            'hearingDate' => $hearing_date,
            'hearingTime' => $hearing_time,
            'zoomLink' => $zoom_link,
            'notAvailableRoute' => route($notAvailableRoute),
            'showNotAvailableData' => in_array($tab, ['filed']),
        ];

        $returnHTML = view('modal.attorney.client_management.case_filed_info')
            ->with(['data' => $data])
            ->render();

        return $returnHTML;

    }

}
