<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use Illuminate\Support\Facades\Storage;
use App\Models\ClientDocumentUploaded;

class CheckMissingClientDocuments extends Command
{
    protected $signature = 'check:missing-client-documents';
    protected $description = 'Check for client documents in the DB that do not exist on S3';

    public function handle()
    {
        $this->info("Scanning documents created within the last 12 months...");

        $missingFiles = [];



        $logPath = storage_path('logs/missing_s3_documents.log');

        // Clear previous log
        file_put_contents($logPath, "Missing S3 Documents Log - " . now()->toDateTimeString() . "\n\n");
        $clientIds = [57648,57606,57529,57492,57490,57464,57449,57448,57435,57433,57424,57421,57420,57417,57388,57371,57362,57359,57358,57356,57354,57353,57345,57344,57338,57335,57332,57326,57319,57314,57311,57307,57296,57295,57289,57288,57284,57278,57276,57275,57274,57270,57259,57255,57243,57241,57226,57221,57218,57215,57207,57197,57195,57193,57191,57181,57173,57171,57154,57147,57143,57140,57137,57129,57113,57112,57096,57092,57091,57087,57086,57085,57084,57083,57081,57075,57072,57061,57052,57050,57048,57038,57036,57034,57000,56999,56998,56997,56986,56985,56983,56979,56974,56972,56970,56965,56963,56960,56959,56958,56957,56956,56955,56954,56943,56942,56941,56939,56937,56933,56931,56930,56925,56921,56919,56916,56915,56913,56907,56902,56896,56891,56890,56887,56877,56872,56867,56866,56862,56858,56854,56851,56845,56844,56842,56837,56829,56827,56825,56823,56822,56821,56818,56817,56816,56814,56802,56795,56794,56790,56788,56787,56786,56782,56781,56773,56770,56769,56768,56757,56753,56752,56745,56736,56732,56725,56718,56709,56707,56706,56697,56695,56694,56692,56688,56686,56685,56683,56682,56679,56674,56672,56671,56669,56663,56662,56661,56658,56653,56652,56650,56648,56647,56638,56636,56635,56634,56632,56631,56629,56627,56625,56624,56623,56620,56618,56615,56612,56611,56608,56601,56594,56593,56592,56591,56590,56588,56587,56586,56579,56578,56575,56571,56568,56564,56563,56561,56556,56555,56550,56549,56546,56545,56544,56543,56541,56539,56536,56534,56533,56530,56522,56521,56518,56516,56514,56511,56502,56499,56492,56490,56489,56486,56485,56482,56479,56477,56476,56469,56465,56463,56456,56450,56448,56444,56443,56442,56441,56437,56436,56432,56431,56425,56415,56411,56410,56407,56404,56403,56396,56394,56387,56384,56380,56379,56378,56367,56366,56364,56360,56359,56358,56354,56351,56350,56349,56343,56338,56336,56335,56334,56333,56332,56324,56321,56320,56319,56317,56316,56314,56310,56308,56301,56298,56297,56296,56282,56278,56276,56270,56267,56265,56263,56260,56258,56255,56252,56250,56249,56247,56246,56245,56242,56239,56237,56227,56226,56225,56219,56213,56211,56204,56203,56202,56201,56200,56199,56188,56186,56181,56178,56177,56176,56171,56169,56167,56165,56162,56157,56155,56151,56150,56138,56134,56126,56109,56106,56102,56101,56100,56098,56096,56095,56092,56090,56075,56066,56062,56061,56056,56053,56052,56032,56007,56005,56004,56003,55993,55981,55977,55975,55971,55970,55951,55946,55945,55939,55937,55919,55918,55917,55910,55909,55899,55896,55895,55887,55883,55881,55880,55879,55878,55870,55869,55864,55863,55861,55848,55847,55846,55844,55833,55830,55827,55824,55816,55815,55813,55808,55807,55804,55802,55790,55785,55780,55774,55773,55764,55762,55747,55746,55743,55741,55738,55737,55736,55735,55731,55730,55728,55726,55714,55699,55692,55690,55680,55677,55670,55669,55667,55666,55655,55645,55642,55641,55637,55632,55626,55621,55619,55618,55617,55616,55606,55605,55601,55598,55596,55595,55587,55585,55578,55576,55562,55556,55555,55544,55543,55541,55540,55538,55526,55523,55522,55509,55507,55506,55505,55504,55503,55502,55501,55496,55486,55485,55477,55470,55461,55456,55455,55454,55453,55446,55444,55437,55427,55425,55423,55413,55412,55389,55380,55373,55364,55361,55358,55342,55326,55322,55319,55317,55314,55307,55302,55295,55293,55286,55285,55284,55277,55273,55269,55263,55261,55260,55254,55252,55251,55247,55243,55241,55240,55236,55227,55225,55223,55219,55217,55215,55210,55189,55182,55180,55178,55177,55176,55170,55169,55166,55161,55158,55157,55150,55147,55144,55143,55141,55138,55137,55127,55126,55120,55119,55112,55107,55092,55079,55076,55070,55069,55064,55062,55058,55048,55044,55043,55034,55032,55029,55025,55016,55003,55002,54992,54988,54970,54966,54952,54949,54946,54945,54943,54942,54935,54921,54919,54909,54904,54897,54890,54885,54875,54873,54870,54868,54867,54863,54857,54856,54855,54854,54852,54848,54844,54831,54829,54822,54806,54798,54788,54787,54786,54782,54780,54778,54774,54771,54770,54764,54761,54759,54758,54756,54754,54752,54751,54725,54724,54718,54705,54697,54691,54690,54677,54639,54638,54637,54633,54615,54574,54537,54513,54491,54471,54411,54410,54363,54359,54350,54199,54045,54007,53979,53923,53832,53772,53520,53409,53352,53346,53162,52549];
        ClientDocumentUploaded::whereIn('client_id', $clientIds)
            ->chunk(50, function ($documents) use (&$missingFiles, $logPath) {
                foreach ($documents as $doc) {
                    $path = $doc->document_file;
                    \Log::info('checking for client id ' . $doc->client_id);
                    if (!empty($path) && !Storage::disk('s3')->exists($path)) {
                        $entry = [
                            'id' => $doc->id,
                            'client_id' => $doc->client_id,
                            'document_type' => $doc->document_type,
                            'updated_name' => $doc->updated_name,
                            'document_file' => $path,
                        ];
                        if (in_array($doc->document_type, ['Debtor_Pay_Stubs', 'Co_Debtor_Pay_Stubs'])) {
                            \App\Models\PayStubs::where(['client_id' => $doc->client_id, 'document_id' => $doc->id])->delete();
                        }
                        ClientDocumentUploaded::where('id', '=', $doc->id)->delete();

                        $missingFiles[] = $entry;

                        // Append log entry
                        file_put_contents($logPath, json_encode($entry) . "\n", FILE_APPEND);
                    }
                }
            });

        if (empty($missingFiles)) {
            $this->info("✅ All recent document files exist on S3.");
        } else {
            $this->error("❌ Missing Files Found. Logged to: storage/logs/missing_s3_documents.log");

            $headers = ['ID', 'Client ID', 'Type', 'Updated Name', 'File Path'];
            $this->table($headers, array_map(function ($doc) {
                return [
                    $doc['id'],
                    $doc['client_id'],
                    $doc['document_type'],
                    $doc['updated_name'],
                    $doc['document_file']
                ];
            }, $missingFiles));
        }
    }


}
