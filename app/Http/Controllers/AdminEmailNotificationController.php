<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\EmailNotification;
use Illuminate\Support\Facades\Auth;
use App\Helpers\Helper;
use App\Models\AttorneySettings;

class AdminEmailNotificationController extends Controller
{
    public function index(Request $request)
    {
        $notifications = EmailNotification::where("added_by", "=", Auth::user()->id)->orderBy('id', 'DESC')->select('id', 'subject', 'attorney_detail', 'notification_detail', 'created_at', 'updated_at');
        $notifications = $notifications->paginate(10);
        $attorneys = \App\Models\User::where('role', \App\Models\User::ATTORNEY)->orderBy('users.name', 'ASC')
                        ->select('name', 'email', 'users.id as attorney_id')
                        ->get()->toArray();
        $keyword = $request->query('q') ?? '';

        return view('admin.email_notification.show')->with(['keyword' => $keyword,'notifications' => $notifications, 'attorneys' => $attorneys]);
    }

    public function create(Request $request)
    {
        if ($request->isMethod('post')) {
            $input = $request->all();
            $subject = Helper::validate_key_value('subject', $input);
            $message = Helper::validate_key_value('message', $input);
            $selected_attorney = Helper::validate_key_value('multiple_attorney', $input);

            $attorneys = \App\Models\User::where('role', \App\Models\User::ATTORNEY)->orderBy('users.id', 'DESC')
                        ->select('name', 'email', 'users.id as attorney_id')
                        ->get()->toArray();
            $filtered_attorneys = collect($attorneys)->whereIn('attorney_id', $selected_attorney)->values()->all();
            $finalArray = [];
            $emails = [];
            $attachments = [];
            $pathToStore = [];

            // Handle file uploads
            if ($request->hasFile('attachments')) {
                foreach ($request->file('attachments') as $file) {
                    $filename = time() . '_' . $file->getClientOriginalName();
                    $store_path = "admin/email_notification/";
                    \Storage::disk('s3')->putFileAs($store_path, $file, $filename);

                    $full_path = $store_path . $filename;

                    $mimeType = $file->getMimeType();
                    $type = str_contains($mimeType, 'image') ? 'image' : (str_contains($mimeType, 'pdf') ? 'pdf' : 'other');

                    if (\Storage::disk('s3')->exists($full_path)) {
                        // For private files - generate a signed URL that expires
                        $temporaryUrl = \Storage::disk('s3')->temporaryUrl(
                            $full_path,
                            now()->addHour() // URL expires in 15 minutes
                        );

                        $attachments[] = [
                            'type' => $type,
                            'path' => $temporaryUrl,
                            'mime_type' => $mimeType,
                        ];
                    }
                    $pathToStore[] = [
                        'type' => $type,
                        'path' => $full_path,
                        'mime_type' => $mimeType,
                    ];
                }
            }
            foreach ($filtered_attorneys as $key => $value) {
                $attorney_id = Helper::validate_key_value('attorney_id', $value);
                $name = Helper::validate_key_value('name', $value);
                $email = Helper::validate_key_value('email', $value);
                $dataToShow = !empty($attorney_id) ? $attorney_id . ' - ' . $name : $name;
                $dataToShow = !empty($email) ? $dataToShow . ' (' . $email . ')' : $dataToShow;
                $finalArray[] = $dataToShow;
                if (!empty($email)) {
                    $emails[] = $email;
                }
            }
            try {
                if (AttorneySettings::isEmailEnabled(1, 'attorney_concierge_auto_generated_mail', '', true)) {
                    \Illuminate\Support\Facades\Mail::to($emails)->send(new \App\Mail\ConciergeAutoGenerated($subject, $message, $attachments));
                }

                $newEmail = new EmailNotification();
                $newEmail->subject = $subject;
                $newEmail->attorney_detail = json_encode($finalArray);
                $newEmail->notification_detail = $message;
                $newEmail->attachment_s3_path = json_encode($pathToStore);
                $newEmail->added_by = Auth::user()->id;
                $newEmail->created_at = date("Y-m-d H:i:s");
                $newEmail->updated_at = date("Y-m-d H:i:s");

                if ($newEmail->save()) {
                    return redirect()->route('admin_email_notification_index')->with('success', 'Email notification has been sent successfully.');
                } else {
                    return redirect()->back()->withError("something went wrong");
                }
            } catch (\Throwable $th) {
                return redirect()->back()->withError("something went wrong");
            }
        } else {
            return redirect()->back()->with('error', 'Not a valid request, Please check.');
        }
    }

    public function view_message_popup(Request $request)
    {
        $input = $request->all();
        $notifications = EmailNotification::where("id", "=", $input['table_id'])->select('id', 'subject', 'notification_detail', 'attachment_s3_path')->first()->toArray();
        $subject = Helper::validate_key_value('subject', $notifications);
        $html = Helper::validate_key_value('notification_detail', $notifications);
        $previewData = Helper::validate_key_value('attachment_s3_path', $notifications);
        $previewData = !empty($previewData) ? json_decode($previewData, true) : [];

        if (!empty($previewData)) {
            foreach ($previewData as $key => $data) {
                $full_path = Helper::validate_key_value('path', $data);
                $previewData[$key]['path'] = \Storage::disk('s3')->temporaryUrl($full_path, now()->addDays(2));
            }
        }

        return view('admin.email_notification.view_message', ['subject' => $subject, 'html' => $html, 'data' => $previewData]);
    }

}
